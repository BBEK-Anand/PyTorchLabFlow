name: Publish to PyPI / TestPyPI

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Set dynamic version (based on date + git hash)
        run: |
          DATE=$(date +%Y%m%d)
          GIT_HASH=$(git rev-parse --short HEAD)
          VERSION="0.3.0.dev${DATE}+${GIT_HASH}"

          echo "Setting dynamic version: $VERSION"

          # Inject into _version.py
          echo "__version__ = '${VERSION}'" > src/pytorchlabflow/_version.py

          # Recreate pyproject.toml (optional but modern)
          echo "[build-system]" > pyproject.toml
          echo "requires = [\"setuptools\", \"wheel\"]" >> pyproject.toml
          echo "build-backend = \"setuptools.build_meta\"" >> pyproject.toml

      - name: Build package
        run: python -m build

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  publish:
    name: Publish to TestPyPI or PyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Twine
        run: pip install twine

      - name: Publish to appropriate index
        env:
          TWINE_USERNAME: __token__
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "Publishing to PyPI"
            twine upload -u __token__ -p "$PYPI_TOKEN" dist/*
          elif [ "${GITHUB_REF}" = "refs/heads/dev" ]; then
            echo "Publishing to TestPyPI"
            twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p "$TEST_PYPI_TOKEN" dist/*
          else
            echo "Not publishing: unexpected branch."
          fi
